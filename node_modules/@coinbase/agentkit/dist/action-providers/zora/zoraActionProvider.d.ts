import { z } from "zod";
import { ActionProvider } from "../actionProvider";
import { EvmWalletProvider } from "../../wallet-providers/evmWalletProvider";
import { CreateCoinSchema } from "./schemas";
import { Network } from "../../network";
/**
 * ZoraActionProvider provides actions for interacting with the Zora protocol.
 */
export declare class ZoraActionProvider extends ActionProvider<EvmWalletProvider> {
    #private;
    /**
     * Constructor for the ZoraActionProvider.
     */
    constructor();
    /**
     * Creates a new Zora coin.
     *
     * @param walletProvider - The wallet provider to use for the transaction.
     * @param args - The input arguments for the action.
     * @returns A message containing the coin creation details.
     */
    createCoin(walletProvider: EvmWalletProvider, args: z.infer<typeof CreateCoinSchema>): Promise<string>;
    /**
     * Checks if the Zora action provider supports the given network.
     *
     * @param network - The network to check.
     * @returns True if the Zora action provider supports the network, false otherwise.
     */
    supportsNetwork: (network: Network) => boolean;
}
/**
 * Factory function to create a new ZoraActionProvider instance.
 *
 * @returns A new ZoraActionProvider instance
 */
export declare const zoraActionProvider: () => ZoraActionProvider;
