import { z } from "zod";
import { SuperfluidWrapTokenSchema } from "./schemas";
import { ActionProvider } from "../actionProvider";
import { Network } from "../../network";
import { EvmWalletProvider } from "../../wallet-providers";
/**
 * SuperfluidStreamActionProvider is an action provider for wrapping superfluid token.
 */
export declare class SuperfluidWrapperActionProvider extends ActionProvider<EvmWalletProvider> {
    /**
     * Constructor for the SuperfluidWrapperActionProvider class.
     */
    constructor();
    /**
     * Wraps a token to a Super token
     * The Super token must already exist
     * If it does not, see SuperfluidCreateSuperTokenAction
     *
     * @param walletProvider - The wallet provider to start the stream from.
     * @param args - The input arguments for the action.
     * @returns A JSON string containing the account details or error message
     */
    wrapToken(walletProvider: EvmWalletProvider, args: z.infer<typeof SuperfluidWrapTokenSchema>): Promise<string>;
    /**
     * Checks if the Superfluid action provider supports the given network.
     *
     * @param network - The network to check.
     * @returns True if the Superfluid action provider supports the network, false otherwise.
     */
    supportsNetwork: (network: Network) => boolean;
}
export declare const superfluidWrapperActionProvider: () => SuperfluidWrapperActionProvider;
