import { z } from "zod";
/**
 * Action schemas for the flaunch action provider.
 *
 * This file contains the Zod schemas that define the shape and validation
 * rules for action parameters in the flaunch action provider.
 */
/**
 * Schema for Flaunch token creation
 */
export declare const FlaunchSchema: z.ZodObject<{
    name: z.ZodString;
    symbol: z.ZodString;
    image: z.ZodString;
    description: z.ZodString;
    websiteUrl: z.ZodOptional<z.ZodString>;
    discordUrl: z.ZodOptional<z.ZodString>;
    twitterUrl: z.ZodOptional<z.ZodString>;
    telegramUrl: z.ZodOptional<z.ZodString>;
    fairLaunchPercent: z.ZodDefault<z.ZodNumber>;
    fairLaunchDuration: z.ZodDefault<z.ZodNumber>;
    initialMarketCapUSD: z.ZodDefault<z.ZodNumber>;
    creatorFeeAllocationPercent: z.ZodDefault<z.ZodNumber>;
    creatorSplitPercent: z.ZodDefault<z.ZodNumber>;
    splitReceivers: z.ZodOptional<z.ZodArray<z.ZodObject<{
        address: z.ZodString;
        percent: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        address: string;
        percent: number;
    }, {
        address: string;
        percent: number;
    }>, "many">>;
    preminePercent: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    symbol: string;
    name: string;
    description: string;
    image: string;
    fairLaunchPercent: number;
    fairLaunchDuration: number;
    initialMarketCapUSD: number;
    creatorFeeAllocationPercent: number;
    creatorSplitPercent: number;
    preminePercent: number;
    websiteUrl?: string | undefined;
    discordUrl?: string | undefined;
    twitterUrl?: string | undefined;
    telegramUrl?: string | undefined;
    splitReceivers?: {
        address: string;
        percent: number;
    }[] | undefined;
}, {
    symbol: string;
    name: string;
    description: string;
    image: string;
    websiteUrl?: string | undefined;
    discordUrl?: string | undefined;
    twitterUrl?: string | undefined;
    telegramUrl?: string | undefined;
    fairLaunchPercent?: number | undefined;
    fairLaunchDuration?: number | undefined;
    initialMarketCapUSD?: number | undefined;
    creatorFeeAllocationPercent?: number | undefined;
    creatorSplitPercent?: number | undefined;
    splitReceivers?: {
        address: string;
        percent: number;
    }[] | undefined;
    preminePercent?: number | undefined;
}>;
export declare const BuyCoinWithETHInputSchema: z.ZodObject<{
    coinAddress: z.ZodString;
    amountIn: z.ZodString;
    slippagePercent: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    amountIn: string;
    coinAddress: string;
    slippagePercent: number;
}, {
    amountIn: string;
    coinAddress: string;
    slippagePercent?: number | undefined;
}>;
export declare const BuyCoinWithCoinInputSchema: z.ZodObject<{
    coinAddress: z.ZodString;
    amountOut: z.ZodString;
    slippagePercent: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    amountOut: string;
    coinAddress: string;
    slippagePercent: number;
}, {
    amountOut: string;
    coinAddress: string;
    slippagePercent?: number | undefined;
}>;
export declare const SellCoinSchema: z.ZodObject<{
    coinAddress: z.ZodString;
    amountIn: z.ZodString;
    slippagePercent: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    amountIn: string;
    coinAddress: string;
    slippagePercent: number;
}, {
    amountIn: string;
    coinAddress: string;
    slippagePercent?: number | undefined;
}>;
