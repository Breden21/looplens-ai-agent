export declare const MigrationHelperAbi: readonly [{
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "v1";
        readonly type: "address";
        readonly internalType: "contract IValidator";
    }, {
        readonly name: "v2";
        readonly type: "address";
        readonly internalType: "contract IValidator";
    }, {
        readonly name: "v3";
        readonly type: "address";
        readonly internalType: "contract IValidator";
    }, {
        readonly name: "v4";
        readonly type: "address";
        readonly internalType: "contract IValidator";
    }, {
        readonly name: "v5";
        readonly type: "address";
        readonly internalType: "contract IValidator";
    }, {
        readonly name: "s1";
        readonly type: "address";
        readonly internalType: "contract ISigner";
    }, {
        readonly name: "s2";
        readonly type: "address";
        readonly internalType: "contract ISigner";
    }, {
        readonly name: "s3";
        readonly type: "address";
        readonly internalType: "contract ISigner";
    }, {
        readonly name: "tv1";
        readonly type: "address";
        readonly internalType: "contract IValidator";
    }, {
        readonly name: "tv2";
        readonly type: "address";
        readonly internalType: "contract IValidator";
    }, {
        readonly name: "tv3";
        readonly type: "address";
        readonly internalType: "contract IValidator";
    }, {
        readonly name: "ts1";
        readonly type: "address";
        readonly internalType: "contract ISigner";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "consumeGas";
    readonly inputs: readonly [{
        readonly name: "count";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "isMigrated";
    readonly inputs: readonly [{
        readonly name: "kernel";
        readonly type: "address";
        readonly internalType: "contract Kernel";
    }, {
        readonly name: "validators";
        readonly type: "address[]";
        readonly internalType: "contract IValidator[]";
    }, {
        readonly name: "pIds";
        readonly type: "bytes4[]";
        readonly internalType: "PermissionId[]";
    }];
    readonly outputs: readonly [{
        readonly name: "root";
        readonly type: "bool";
        readonly internalType: "bool";
    }, {
        readonly name: "v";
        readonly type: "bool[]";
        readonly internalType: "bool[]";
    }, {
        readonly name: "p";
        readonly type: "bool[]";
        readonly internalType: "bool[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "migrate";
    readonly inputs: readonly [];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "migrateWithCall";
    readonly inputs: readonly [{
        readonly name: "validators";
        readonly type: "address[]";
        readonly internalType: "contract IValidator[]";
    }, {
        readonly name: "permissionIds";
        readonly type: "bytes4[]";
        readonly internalType: "bytes4[]";
    }, {
        readonly name: "execMode";
        readonly type: "bytes32";
        readonly internalType: "ExecMode";
    }, {
        readonly name: "execData";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "migrateWithPermissionId";
    readonly inputs: readonly [{
        readonly name: "permissionId";
        readonly type: "bytes4[]";
        readonly internalType: "bytes4[]";
    }, {
        readonly name: "validators";
        readonly type: "address[]";
        readonly internalType: "contract IValidator[]";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "mockSlot";
    readonly inputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "usedSlot";
    readonly inputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}];
//# sourceMappingURL=MigrationHelperAbi.d.ts.map