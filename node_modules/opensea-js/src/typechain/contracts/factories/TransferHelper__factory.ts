/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  TransferHelper,
  TransferHelperInterface,
} from "../TransferHelper";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ConduitItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct TransferHelperItem[]",
        name: "items",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
    ],
    name: "bulkTransfer",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class TransferHelper__factory {
  static readonly abi = _abi;
  static createInterface(): TransferHelperInterface {
    return new Interface(_abi) as TransferHelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransferHelper {
    return new Contract(address, _abi, runner) as unknown as TransferHelper;
  }
}
