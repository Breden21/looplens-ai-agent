import { Chain } from "../types";
/**
 * Gets the chain ID for a given chain.
 * @param chain The chain to get the ID for
 * @returns The chain ID as a string
 */
export declare const getChainId: (chain: Chain) => "1" | "137" | "43114" | "42161" | "238" | "8453" | "10" | "7777777" | "1329" | "8333" | "80094" | "747" | "33139" | "2020" | "2741" | "360" | "130" | "43419" | "999" | "5031";
/**
 * Returns the default currency for offers on the given chain.
 * @param chain The chain to get the offer payment token for
 * @returns The token address for offers
 */
export declare const getOfferPaymentToken: (chain: Chain) => "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2" | "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619" | "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7" | "0x82af49447d8a07e3bd95bd0d56f35241523fbab1" | "0x4300000000000000000000000000000000000004" | "0x4200000000000000000000000000000000000006" | "0x6969696969696969696969696969696969696969" | "0xe30fedd158a2e3b13e9badaeabafc5516e95e8c7" | "0xd3bf53dac106a0290b0483ecbc89d40fcc961f3e" | "0x48b62137edfa95a428d35c09e44256a739f6b557" | "0xe514d9deb7966c8be0ca922de8a064264ea6bcd4" | "0x3439153eb7af838ad19d56e1571fbd09333c2809" | "0x5aad7bba61d95c2c4e525a35f4062040264611f1" | "0x5555555555555555555555555555555555555555" | "0x046ede9564a72571df6f5e44d0405360c0f4dcab";
/**
 * Returns the default currency for listings on the given chain.
 * @param chain The chain to get the listing payment token for
 * @returns The token address for listings
 */
export declare const getListingPaymentToken: (chain: Chain) => "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619" | "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7" | "0xd3bf53dac106a0290b0483ecbc89d40fcc961f3e" | "0xe514d9deb7966c8be0ca922de8a064264ea6bcd4" | "0x0000000000000000000000000000000000000000";
/**
 * Get the default conduit key and address for a given chain.
 * @param chain The chain to get the conduit for
 * @returns The conduit key and address for the chain
 */
export declare const getDefaultConduit: (chain: Chain) => {
    key: string;
    address: string;
};
/**
 * Get the Seaport 1.6 contract address for a given chain.
 * @param chain The chain to get the Seaport address for
 * @returns The Seaport 1.6 address for the chain
 */
export declare const getSeaportAddress: (chain: Chain) => string;
/**
 * Get the signed zone address for a given chain.
 * @param chain The chain to get the signed zone address for
 * @returns The signed zone address for the chain
 */
export declare const getSignedZone: (chain: Chain) => string;
/**
 * Get the fee recipient address for a given chain
 * @param chain The blockchain chain
 * @returns The fee recipient address for the chain
 */
export declare const getFeeRecipient: (chain: Chain) => string;
/**
 * Get the appropriate token address for wrap/unwrap operations.
 * For Polygon, use WPOL. For other chains, use the wrapped native asset.
 * @param chain The chain to get the token address for
 * @returns The token address for wrap/unwrap operations
 */
export declare const getNativeWrapTokenAddress: (chain: Chain) => string;
