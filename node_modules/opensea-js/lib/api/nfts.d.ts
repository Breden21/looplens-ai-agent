import { ListNFTsResponse, GetNFTResponse } from "./types";
import { Chain } from "../types";
/**
 * NFT-related API operations
 */
export declare class NFTsAPI {
    private get;
    private post;
    private chain;
    constructor(get: <T>(apiPath: string, query?: object) => Promise<T>, post: <T>(apiPath: string, body?: object, opts?: object) => Promise<T>, chain: Chain);
    /**
     * Fetch multiple NFTs for a collection.
     */
    getNFTsByCollection(slug: string, limit?: number | undefined, next?: string | undefined): Promise<ListNFTsResponse>;
    /**
     * Fetch multiple NFTs for a contract.
     */
    getNFTsByContract(address: string, limit?: number | undefined, next?: string | undefined, chain?: Chain): Promise<ListNFTsResponse>;
    /**
     * Fetch NFTs owned by an account.
     */
    getNFTsByAccount(address: string, limit?: number | undefined, next?: string | undefined, chain?: Chain): Promise<ListNFTsResponse>;
    /**
     * Fetch metadata, traits, ownership information, and rarity for a single NFT.
     */
    getNFT(address: string, identifier: string, chain?: Chain): Promise<GetNFTResponse>;
    /**
     * Force refresh the metadata for an NFT.
     */
    refreshNFTMetadata(address: string, identifier: string, chain?: Chain): Promise<Response>;
}
